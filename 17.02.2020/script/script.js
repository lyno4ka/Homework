// Task1 
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setComment —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: date, message, author. –î–∞—Ç–∞ –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è - 
// –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ –Ω–∏—Ö –∏–ª–∏ –æ–±–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç, —Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ 
// –¥–æ–ª–∂–Ω–æ –æ–±—Ä—ã–≤–∞—Ç—å—Å—è, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–¥–∞–≤–∞—Ç—å—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (alert) –æ —Ç–æ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ 
// –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–∞—Ä–∞–º–µ—Ç—Ä author - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –Ω–æ –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ 
// –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, —Ç–æ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ ‚ÄòAnonymous‚Äô. –§—É–Ω–∫—Ü–∏—è 
// —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç–µ–∫—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 
// 				<–∏–º—è_–∞–≤—Ç–æ—Ä–∞>, <–¥–∞—Ç–∞>
// 				<—Ç–µ–∫—Å—Ç_—Å–æ–æ–±—â–µ–Ω–∏—è>

// function setComment (date, message, author) {
//     if (date === undefined || message === undefined) {
//         return alert('–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
//     }   

//     if (author === undefined) {
//         author = 'Anonymous';
//     }
//     console.log(author + ', ' + date + '\n' + message);
// }

// setComment('2016-11-02', 'Everything is ok', 'John');
// setComment('2016-11-02', 'You could do it better!');
// setComment('fdf');

// Task2
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—É–± –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞, –∞–Ω–∞–ª–æ–≥ Math.pow(x, 3) ‚Äì 
// a) –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª b) –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∫—É—Ä—Å–∏—é:

//a)
// function cube(x) {
//     let result = 1;
//     for (let i = 0; i < 3; i++) {
//         result *= x;
//     }
//     return result;
// }
// console.log( cube(2) ); // 8

//b)
// function cube(x) {
//     let innerCube = (x, power) => power == 1 ? x : (x * innerCube(x, power - 1));
//     return innerCube(x, 3);
// }
// console.log( cube(2) ); // 8


// Task3
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é extraCube, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ —á–∏—Å–ª–æ, –∏–ª–∏ –º–∞—Å—Å–∏–≤ 
// —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏–±–æ –∫—É–± —á–∏—Å–ª–∞, –ª–∏–±–æ –º–∞—Å—Å–∏–≤ –∫—É–±–æ–≤, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ 
// –≤—Ö–æ–¥—è—â–µ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (typeof). –î–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫—É–±–∞ —á–∏—Å–ª–∞ –≤–º–µ—Å—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ Math.pow 
// –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.

// function extraCube(param) { 
//     if (Array.isArray(param)) {
//         return param.map((arr) => {
//             return cube(arr);  //—Ñ—É–Ω–∫—Ü–∏—è —Å Task2
//         })
//     }
//     return cube(param);
// }


// console.log( extraCube(2) ); // 8
// console.log( extraCube([0, 1, 2, 3])); // [0, 1, 8, 27]


// Task4
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
// function multi (x) {
//     return (y) => {
//         return (z) => {
//             return x * y * z;
//         }
//     }
// }
// console.log( multi(2)(3)(4) ); // 24


// Task5 
// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π html-—Ä–∞–∑–º–µ—Ç–∫—É. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ç–∫—É 
// –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.

// <section id="methods">
// 	<article>
// 		<h1>Array.prototype.every()</h1>
// 		<p>–ú–µ—Ç–æ–¥ every() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é, –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.</p>
// 	</article>
// 	<article>
// 		<h1>Array.prototype.some()</h1>
// 		<p>–ú–µ—Ç–æ–¥ some() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ª–∏ —Ö–æ—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é, –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.</p>
// 	</article>
// 	<article>
// 		<h1>Array.prototype.reduce()</h1>
// 		<p>–ú–µ—Ç–æ–¥ reduce() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –º–∞—Å—Å–∏–≤–∞ (—Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ), —Å–≤–æ–¥—è –µ–≥–æ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.</p>
// 	</article>
// 	<article>
// 		<h1>Array.prototype.reduceRight()</h1>
// 		<p>–ú–µ—Ç–æ–¥ reduceRight() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –º–∞—Å—Å–∏–≤–∞ (—Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ), —Å–≤–æ–¥—è –µ–≥–æ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.</p>
// 	</article>
// </section>

let markup = [
    {
        tag: 'section',
        id: 'methods',
        children: [
            {
                tag: 'article',
                children: [
                    {
                        tag: 'h1',
                        content: 'Array.prototype.every()'
                    },
                    {
                        tag: 'p',
                        content: '–ú–µ—Ç–æ–¥ every() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é, –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.'
                    }
                ]
            },
            {
                tag: 'article',
                children: [
                    {
                        tag: 'h1',
                        content: 'Array.prototype.some()'
                    },
                    {
                        tag: 'p',
                        content: '–ú–µ—Ç–æ–¥ some() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ª–∏ —Ö–æ—Ç—å –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —É—Å–ª–æ–≤–∏—é, –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.'
                    }
                ]
            },
            {
                tag: 'article',
                children: [
                    {
                        tag: 'h1',
                        content: 'Array.prototype.reduce()'
                    },
                    {
                        tag: 'p',
                        content: '–ú–µ—Ç–æ–¥ reduce() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –º–∞—Å—Å–∏–≤–∞ (—Å–ª–µ–≤–∞-–Ω–∞–ø—Ä–∞–≤–æ), —Å–≤–æ–¥—è –µ–≥–æ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.'
                    }
                ]
            },
            {
                tag: 'article',
                children: [
                    {
                        tag: 'h1',
                        content: 'Array.prototype.reduceRight()'
                    },
                    {
                        tag: 'p',
                        content: '–ú–µ—Ç–æ–¥ reduceRight() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä—É –∏ –∫–∞–∂–¥–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é –º–∞—Å—Å–∏–≤–∞ (—Å–ø—Ä–∞–≤–∞-–Ω–∞–ª–µ–≤–æ), —Å–≤–æ–¥—è –µ–≥–æ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é.'
                    }
                ]
            }
        ]
    }
];

function buildMarkup (data, target = document.body) {
    data.forEach(item => {
      const node = document.createElement(item.tag);
      target.appendChild(node);

      if ('id' in item) {
          node.id = item.id;
      }
      
      if ('content' in item) {
        node.innerText = item.content;
      }
      
      if ('children' in item && item.children.length) {
        buildMarkup(item.children, node);
      }
    });
}
  
buildMarkup(markup);


// Task6
// –î–∞–Ω –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –¥—Ä—É–≥–∏–µ –º–∞—Å—Å–∏–≤—ã. –ù–∞–ø–∏—à–∏—Ç–µ 
// —Ñ—É–Ω–∫—Ü–∏—é flat, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ ‚Äú—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç‚Äù –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–∞ –≥–ª—É–±–∏–Ω—É depth, 
// —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é flat –ø–æ–¥–Ω–∏–º–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –æ–¥–Ω—É –≥–ª—É–±–∏–Ω—É (—Ç–æ 
// –µ—Å—Ç—å –µ—Å–ª–∏ depth –Ω–µ —É–∫–∞–∑–∞–Ω).

// function flat (arr, depth = '1') {
//     let newArr = arr;
// 		for(let i = depth; i > 0; i--){
// 			newArr = Array.prototype.concat.apply([], newArr);
// 		}
// 			return newArr;
// }

// var data1 = [1, 2, [3, 4, [5, 6]]];
// flat(data1); // [1, 2, 3, 4, [5, 6]]

// var data2 = [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]];
// console.log( flat(data2, 1) ); // [1, 2, 3, 4, [5, 6, [7, 8, [9, 10]]]]
// console.log( flat(data2, 2) ); // [1, 2, 3, 4, 5, 6, [7, 8, [9, 10]]]
// console.log( flat(data2, 3) ); // [1, 2, 3, 4, 5, 6, 7, 8, [9, 10]]
// console.log( flat(data2, 4) ); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

// console.log( flat(data2, 0) ); // [1, 2, [3, 4, [5, 6, [7, 8, [9, 10]]]]]
// console.log( flat(data2, 5) ); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


// Task7
// ‚Äú–ò—Å—Ç–æ—Ä–∏—è –≤ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö‚Äù. –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫. 
// –ü–µ—Ä–µ–±–∏—Ä–∞—è –º–∞—Å—Å–∏–≤ –≤ —Ü–∏–∫–ª–µ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π (setTimeout) –≤—ã–≤–æ–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É 
// –æ–¥–∏–Ω –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ (–æ–¥–Ω—É –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫). –¢–µ–º–∞ - —Å–≤–æ–±–æ–¥–Ω–∞—è, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ 
// –Ω–∞–±–æ—Ä–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫.

let emojiList = ['ü§®', 'üòê', 'üôÑ', 'ü§ó', 'ü§≠', 'ü§´', 'üòú', 'ü§™', 'ü•≥', 'üòé'];

function getStory(data) {
    var div = document.createElement('div');
    div.style.width="200px";
    div.style.height="200px";
    div.style.fontSize="100px";
    div.style.margin="0 auto";
    document.body.appendChild(div);
    for (var i = 0; i < data.length; i++) {  
        (function (j) {
            setTimeout(function() {
            div.innerText = data[j];
            // console.log(j, data[j]);
            }, 1000 * j)
        })(i);
        // console.log(i);
    }
    //  console.log('i', i);
}
getStory(emojiList);


// Task8 
// –ù–∞–π–¥–∏—Ç–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ:

// function foo() {
// 	function bar(a) {
// 		let b = 3;
// 		return b + a;
// 	}
	
// 	for (let i = 0; i < 10; i++) {
// 		console.log( bar(i * 2) );
// 	}
// }

// foo(); // 3 5 7 9 11 13 15 17 19 21


// –ó–∞–º—ã–∫–∞–Ω–∏—è
// Task1
// –ò—Å–ø–æ–ª—å–∑—É—è –∑–∞–º—ã–∫–∞–Ω–∏–µ, –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createTimer, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ 
// performance.now() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–∏ –∏ —Å–ª—É–∂–∏—Ç –¥–ª—è –∑–∞–º–µ—Ä–∞ 
// –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥—Ä—É–≥–æ–≥–æ –∫–æ–¥–∞:
// function createTimer() {
//     let time0 = performance.now();
//     return function () {
//         let time1 = performance.now(); 
//         return time1 - time0;
//     }
// }

// var timer = createTimer();
// alert('!');  // –∫–æ–¥, –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å
// alert( timer() ); // –≤—Ä–µ–º—è –≤ –º–∫—Å –æ—Ç –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è createTimer() –¥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—ã–∑–æ–≤–∞ timer()



// Task2
// –ò—Å–ø–æ–ª—å–∑—É—è –∑–∞–º—ã–∫–∞–Ω–∏—è, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createAdder(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ª—é–±–æ–π 
// –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∫ –ø–µ—Ä–≤–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤—Ç–æ—Ä–æ–π. 
// –§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É:

// function createAdder(param1) {
//     return function (param2) {
//         return param1 + param2;
//     };
// }

// var hello = createAdder('Hello, ');
// alert( hello('John') ); // Hello, John
// alert( hello('Harry') ); // Hello, Harry

// var plus = createAdder(5);
// alert( plus(1) ); // 6
// alert( plus(5) ); // 10
